{"version":3,"sources":["assets/audio/switch.ogg","assets/audio/button_click.ogg","assets/audio/select_mode.ogg","context/AppContext.js","components/Mode.js","components/Settings.js","components/Timer.js","layouts/App.js","index.js"],"names":["ACTIONS","initialState","id","name","isActive","value","isCreatedBySystem","initializer","initialValue","JSON","parse","localStorage","getItem","AppContext","createContext","AppProvider","children","createModel","Date","now","useReducer","modes","action","type","payload","map","mode","dispatch","useState","settingsVisible","setSettingsVisible","playerOneTime","setPlayerOneTime","playerTwoTime","setPlayerTwoTime","isPlayerOneTurn","setIsPlayerOneTurn","isPlayerTwoTurn","setIsPlayerTwoTurn","isPaused","setIsPaused","idOne","useRef","idTwo","switchAudioRef","buttonAudioRef","selectAudioRef","setActiveModeTime","activeMode","filter","useEffect","setItem","stringify","console","log","window","clearInterval","current","setInterval","prevValue","Provider","toggleSettingsVisible","togglePaused","toggleTurn","hasGameStarted","modeTime","ref","src","SwitchAudio","typeof","ButtonAudio","SelectAudio","Mode","useContext","classes","className","onClick","play","Settings","toggleVisible","modeComponents","Timer","reset","settingsComponent","startButtonIcon","startButtonClasses","playerOneAreaClasses","playerTwoAreaClasses","generatePlayerInfo","playerTurnInfo","convertTime","minutes","Math","floor","seconds","playerOneTimeConverted","playerTwoTimeConverted","handlePlayerAreaClick","isAreaPlayerTurn","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.608acea6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/switch.3081cda3.ogg\";","export default __webpack_public_path__ + \"static/media/button_click.90c85414.ogg\";","export default __webpack_public_path__ + \"static/media/select_mode.3f93180a.ogg\";","import React, { createContext, useEffect, useReducer, useRef, useState } from 'react';\r\n\r\nimport SwitchAudio from '../assets/audio/switch.ogg';\r\nimport ButtonAudio from '../assets/audio/button_click.ogg';\r\nimport SelectAudio from '../assets/audio/select_mode.ogg';\r\n\r\nexport const ACTIONS = {\r\n  ADD_MODE: 'add-mode',\r\n  EDIT_MODE: 'edit-mode',\r\n  REMOVE_MODE: 'remove-mode',\r\n  TOGGLE_MODE: 'toggle-mode'\r\n};\r\n\r\nconst initialState = [\r\n  { id: 1618566292337, name: 'Classic', isActive: true, value: 30, isCreatedBySystem: true },\r\n  { id: 1618566540517, name: 'Rapid', isActive: false, value: 15, isCreatedBySystem: true },\r\n  { id: 1618566689616, name: 'Erambo', isActive: false, value: 10, isCreatedBySystem: true },\r\n  { id: 1618566628616, name: 'Blitz', isActive: false, value: 5, isCreatedBySystem: true },\r\n  { id: 1618566740721, name: 'Bullet', isActive: false, value: 3, isCreatedBySystem: true },\r\n  { id: 1618566823233, name: 'Lightning', isActive: false, value: 1, isCreatedBySystem: true }\r\n];\r\n\r\nconst initializer = (initialValue = initialState) => JSON.parse(localStorage.getItem(\"localModes\")) || initialValue;\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  \r\n  const reducer = (modes, action) => {\r\n    switch (action.type) {\r\n      case ACTIONS.ADD_MODE:\r\n        return [...modes, createModel(action.payload.name, action.payload.value)];\r\n      case ACTIONS.TOGGLE_MODE:\r\n        return modes.map((mode) => {\r\n          if(mode.id !== action.payload.id && mode.isActive) return {...mode, isActive: false};\r\n          else if(mode.id === action.payload.id) return { ...mode, isActive: !mode.isActive};\r\n          else return mode;\r\n        });\r\n      default:\r\n        return modes;\r\n    }\r\n  }\r\n\r\n  const createModel = (name, value) => {\r\n    return { id: Date.now(), name: name, isActive: false, value: value, isCreatedBySystem: false };\r\n  }\r\n\r\n  const [modes, dispatch] = useReducer(reducer, initialState, initializer);\r\n  const [settingsVisible, setSettingsVisible] = useState(false);\r\n  const [playerOneTime, setPlayerOneTime] = useState(1);\r\n  const [playerTwoTime, setPlayerTwoTime] = useState(1);\r\n\r\n  const [isPlayerOneTurn, setIsPlayerOneTurn] = useState(true);\r\n  const [isPlayerTwoTurn, setIsPlayerTwoTurn] = useState(false);\r\n\r\n  const [isPaused, setIsPaused] = useState(true);\r\n\r\n  const idOne = useRef(null);\r\n  const idTwo = useRef(null);\r\n\r\n  const switchAudioRef = useRef(null);\r\n  const buttonAudioRef = useRef(null);\r\n  const selectAudioRef = useRef(null);\r\n\r\n  const toggleTurn = () => {\r\n    setIsPlayerOneTurn((prevValue) => !prevValue);\r\n    setIsPlayerTwoTurn((prevValue) => !prevValue);\r\n  };\r\n\r\n  const togglePaused = () => {\r\n    setIsPaused((prevValue) => !prevValue);\r\n  };\r\n\r\n  const toggleSettingsVisible = () => {\r\n    setSettingsVisible((prevValue) => !prevValue);\r\n  };\r\n\r\n  const setActiveModeTime = () => {\r\n    const activeMode = modes.filter((mode) => mode.isActive);\r\n    setPlayerOneTime(activeMode[0].value * 60);\r\n    setPlayerTwoTime(activeMode[0].value * 60);\r\n  };\r\n\r\n  const hasGameStarted = () => {\r\n    const activeMode = modes.filter((mode) => mode.isActive);\r\n    const modeTime = activeMode[0].value * 60;\r\n    if((playerOneTime === playerTwoTime) && (playerTwoTime === modeTime)) return false;\r\n    return true;\r\n  }\r\n\r\n  const stopActiveUserTimer = () => {\r\n    if(isPlayerOneTurn) {\r\n      window.clearInterval(idOne.current);\r\n    }\r\n\r\n    if(isPlayerTwoTurn) {\r\n      window.clearInterval(idTwo.current);\r\n    }\r\n  };\r\n\r\n  const continueActiveUserTimer = () => {\r\n    if(isPlayerOneTurn) {\r\n      idOne.current = window.setInterval(() => {\r\n        setPlayerOneTime((prevValue) => prevValue - 1);\r\n      }, 1000);\r\n    }\r\n\r\n    if(isPlayerTwoTurn) {\r\n      idTwo.current = window.setInterval(() => {\r\n        setPlayerTwoTime((prevValue) => prevValue - 1);\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('localModes', JSON.stringify(modes))\r\n    setActiveModeTime();\r\n  }, [modes]);\r\n\r\n  useEffect(() => {\r\n    if(isPaused === true) {\r\n      console.log('Stop active user timer');\r\n      stopActiveUserTimer();\r\n    } else {\r\n      console.log('Continue active user timer');\r\n      continueActiveUserTimer();\r\n    }\r\n  }, [isPaused]);\r\n\r\n  useEffect(() => {\r\n    if(!isPaused) {\r\n      if(isPlayerOneTurn === true) {\r\n        idOne.current = window.setInterval(() => {\r\n          setPlayerOneTime((prevValue) => prevValue - 1);\r\n        }, 1000);\r\n      } else {\r\n        window.clearInterval(idOne.current);\r\n      }\r\n    }\r\n  }, [isPlayerOneTurn]);\r\n\r\n  useEffect(() => {\r\n    if(!isPaused) {\r\n      if(isPlayerTwoTurn === true) {\r\n        idTwo.current = window.setInterval(() => {\r\n          setPlayerTwoTime((prevValue) => prevValue - 1);\r\n        }, 1000);\r\n      } else {\r\n        window.clearInterval(idTwo.current);\r\n      }\r\n    }\r\n  }, [isPlayerTwoTurn]);\r\n\r\n  useEffect(() => {\r\n    if(playerOneTime === 0) {\r\n      window.clearInterval(idOne.current);\r\n    }\r\n  }, [playerOneTime]);\r\n\r\n  useEffect(() => {\r\n    if(playerTwoTime === 0) {\r\n      window.clearInterval(idTwo.current);\r\n    }\r\n  }, [playerTwoTime]);\r\n\r\n  return(\r\n    <AppContext.Provider value={{\r\n      modes,\r\n      dispatch,\r\n      settingsVisible,\r\n      toggleSettingsVisible,\r\n      playerOneTime,\r\n      playerTwoTime,\r\n      isPaused,\r\n      togglePaused,\r\n      isPlayerOneTurn,\r\n      isPlayerTwoTurn,\r\n      toggleTurn,\r\n      setActiveModeTime,\r\n      setIsPaused,\r\n      hasGameStarted,\r\n      switchAudioRef,\r\n      buttonAudioRef,\r\n      selectAudioRef\r\n    }}>\r\n      {children}\r\n      <audio ref={switchAudioRef} src={SwitchAudio} typeof='audio/ogg'/>\r\n      <audio ref={buttonAudioRef} src={ButtonAudio} typeof='audio/ogg'/>\r\n      <audio ref={selectAudioRef} src={SelectAudio} typeof='audio/ogg'/>\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppProvider;","import React, { useContext } from 'react';\r\n\r\nimport { ACTIONS } from '../context/AppContext';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nimport './Mode.css';\r\n\r\nconst Mode = ({ mode }) => {\r\n\r\n  const { \r\n    dispatch,\r\n    selectAudioRef\r\n  } = useContext(AppContext);\r\n  const classes = `mode ${mode.isActive ? 'active' : ''}`;\r\n\r\n  return(\r\n    <div className={classes} onClick={() => {\r\n      if(!mode.isActive) dispatch({type: ACTIONS.TOGGLE_MODE, payload: { id: mode.id }});\r\n      selectAudioRef.current.play();\r\n      }}>\r\n      <p className='mode__name'>{mode.name}</p>\r\n      <p className='mode__value'>{mode.value}</p>\r\n      <p className='mode__unit'>min</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mode;","import React, { useContext } from 'react';\r\n\r\nimport Mode from './Mode';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nimport './Settings.css';\r\n\r\nconst Settings = () => {\r\n\r\n  // Dispatch here for adding game mode\r\n  const { \r\n    modes, \r\n    dispatch, \r\n    toggleSettingsVisible : toggleVisible,\r\n    buttonAudioRef\r\n   } = useContext(AppContext);\r\n\r\n  const modeComponents = modes.map((mode) => {\r\n    return <Mode key={mode.id} mode={mode} />;\r\n  });\r\n\r\n  return (\r\n    <div className=\"settings\">\r\n      <div className=\"settings__container\">\r\n        <div className=\"settings__header\">\r\n          <i className=\"fas fa-chevron-left\" onClick={() => {\r\n            toggleVisible();\r\n            buttonAudioRef.current.play();\r\n          }}></i>\r\n          <p className='settings__header-text'>Settings</p>\r\n        </div>\r\n        <div className=\"settings__main\">\r\n          {modeComponents}\r\n        </div>\r\n        <div className=\"settings__footer\">\r\n          <button className='settings__add-mode-btn' onClick={() => console.log('ADD MODE CLICKED')}>\r\n            <i className=\"fas fa-plus\"></i>\r\n          </button>\r\n          <p className='settings__btn-title'>Game Mode</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;","import React, { useContext, useRef } from 'react';\r\n\r\n\r\nimport Settings from './Settings';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nimport './Timer.css';\r\n\r\nconst Timer = () => {\r\n\r\n  const { \r\n    settingsVisible, \r\n    toggleSettingsVisible : toggleVisible, \r\n    playerOneTime, \r\n    playerTwoTime, \r\n    isPaused, \r\n    togglePaused, \r\n    isPlayerOneTurn, \r\n    isPlayerTwoTurn ,\r\n    toggleTurn,\r\n    setActiveModeTime : reset,\r\n    setIsPaused,\r\n    hasGameStarted,\r\n    switchAudioRef,\r\n    buttonAudioRef\r\n  } = useContext(AppContext);\r\n\r\n  // const switchAudioRef = useRef(null);\r\n  // const buttonAudioRef = useRef(null);\r\n\r\n  const settingsComponent = settingsVisible \r\n  ? <Settings/> \r\n  : null;\r\n\r\n  const startButtonIcon = isPaused \r\n  ? <i className=\"fas fa-play\"></i> \r\n  : <i className=\"fas fa-pause\"></i>;\r\n  const startButtonClasses = isPaused \r\n  ? 'timer__btn-start paused' \r\n  : 'timer__btn-start';\r\n  const playerOneAreaClasses = isPlayerOneTurn \r\n  ? 'timer__player-area down activeTurn' \r\n  : 'timer__player-area down'; \r\n  const playerTwoAreaClasses = isPlayerTwoTurn \r\n  ? 'timer__player-area up activeTurn' \r\n  : 'timer__player-area up';\r\n  \r\n  const generatePlayerInfo = (playerTurnInfo) => {\r\n    if(!isPaused && playerTurnInfo) return 'Your turn';\r\n    else if(!isPaused && !playerTurnInfo) return 'Waiting for turn';\r\n    else return 'Waiting for start';\r\n  };\r\n\r\n  const convertTime = (value) => {\r\n    const minutes = Math.floor(value / 60) < 10 \r\n    ? `0${Math.floor(value / 60)}` \r\n    : Math.floor(value / 60);\r\n\r\n    const seconds = value % 60 < 10 \r\n    ? `0${value % 60}` \r\n    : value % 60;\r\n\r\n    return { minutes: minutes, seconds: seconds };\r\n  }\r\n\r\n  const playerOneTimeConverted = convertTime(playerOneTime);\r\n  const playerTwoTimeConverted = convertTime(playerTwoTime);\r\n\r\n  const handleClickReset = () => {\r\n    if(hasGameStarted()) {\r\n      setIsPaused(true);\r\n      reset();\r\n      console.log('Reset completed!')\r\n    } else console.log('Start the game at first!');\r\n  };\r\n\r\n  const handleClickSettings = () => {\r\n    setIsPaused(true);\r\n    toggleVisible();\r\n  }\r\n\r\n  const handlePlayerAreaClick = (isAreaPlayerTurn) => {\r\n    if(isAreaPlayerTurn) {\r\n      toggleTurn();\r\n      switchAudioRef.current.play();\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"timer\">\r\n      {settingsComponent}\r\n      <div className={playerTwoAreaClasses} onClick={() => {\r\n        handlePlayerAreaClick(isPlayerTwoTurn);\r\n      }}>\r\n        <p className='timer__time'>\r\n          {playerTwoTimeConverted.minutes}:{playerTwoTimeConverted.seconds}\r\n        </p>\r\n        <p className='timer__info'>{generatePlayerInfo(isPlayerTwoTurn)}</p>\r\n      </div>\r\n      <div className=\"timer__buttons\">\r\n        <button className='timer__btn-settings' onClick={() => {\r\n          handleClickSettings();\r\n          buttonAudioRef.current.play();\r\n        }}>\r\n          <i className=\"fas fa-bars\"></i>\r\n        </button>\r\n        <button className={startButtonClasses} onClick={() => {\r\n          togglePaused();\r\n          buttonAudioRef.current.play();\r\n        }}>\r\n          {startButtonIcon}\r\n        </button>\r\n        <button className='timer__btn-reset' onClick={() => {\r\n          handleClickReset();\r\n          buttonAudioRef.current.play();\r\n        }}>\r\n          <i className=\"fas fa-redo-alt\"></i>\r\n        </button>\r\n      </div>\r\n      <div className={playerOneAreaClasses} onClick={() => {\r\n        handlePlayerAreaClick(isPlayerOneTurn);\r\n      }}>\r\n        <p className='timer__time'>\r\n          {playerOneTimeConverted.minutes}:{playerOneTimeConverted.seconds}\r\n        </p>\r\n        <p className='timer__info'>{generatePlayerInfo(isPlayerOneTurn)}</p>\r\n      </div>\r\n      {/* <audio ref={switchAudioRef} src={SwitchAudio} typeof='audio/ogg'/>\r\n      <audio ref={buttonAudioRef} src={ButtonAudio} typeof='audio/ogg'/> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;","import React from 'react';\n\nimport Timer from '../components/Timer';\nimport AppProvider from '../context/AppContext';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <AppProvider>\n      <div className='app'>\n        <Timer/>\n      </div>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './layouts/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}